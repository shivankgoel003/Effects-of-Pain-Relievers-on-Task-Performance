ng = 2,
alpha = 0.05
)
powerdrugdos <- wp.kanova(
n = 240,
ndf = 7, # because 8 - 1 = 7
f = cohenfdrugdos,
ng = 8,
alpha = 0.05
)
print(powerdrug)
print(powerdos)
print(powerdrugdos)
#| label: tbl-total-groups
#| tbl-cap: "Treatment Groups"
#| echo: false
#| warning: false
#| message: false
library(knitr)
library(kableExtra)
# Create a dataframe for the table
study_table <- data.frame(
Dosage = c("Low", "High"),
Aspirin = c("Aspirin 500 mg", "Aspirin 1000 mg"),
Paracetamol = c("Paracetamol 500 mg", "Paracetamol 1000 mg"),
Tramadol = c("Tramadol 50 mg", "Tramadol 100 mg"),
Placebo = c("Placebo 1 Tablet", "Placebo 2 Tablets")
)
# Render the table
kable(study_table, align = "c") %>%
add_header_above(c(" " = 1, "Drug Type" = 4)) %>%
kable_styling(full_width = FALSE, position = "center")
#| include: false
#| warning: false
#| message: false
#| echo: false  # Hides code
library(tidyverse)
library(janitor)
library(here)
library(lubridate)
library(patchwork)
library(arrow)
library(dplyr)
library(knitr)
library(performance)
library(modelsummary)
library(kableExtra)
library(performance)
library(ggpubr)
clean_data <- read.csv(here("data", "analysis_data", "clean_data.csv"))
#| label: tbl-summary-5
#| tbl-cap: "Summary of Age Groups"
#| echo: false
#| warning: false
#| message: false
age_counts <- table(clean_data$age_group)
# percentages for each age group
age_percentages <- prop.table(age_counts) * 100
# summary dataframe
age_summary <- data.frame(
`Age Group` = names(age_counts),
Count = as.numeric(age_counts),
Percentage = round(as.numeric(age_percentages), 2)
)
colnames(age_summary)[colnames(age_summary) == "Age.Group"] <- "Age Group"
# Display table
kable(age_summary, booktabs = TRUE, row.names = FALSE)
#| label: tbl-summary-1
#| tbl-cap: "Summary Statistics for Quantitative Variables"
#| echo: false
#| warning: false
#| message: false
mean_game <- mean(clean_data$memory_game_score, na.rm = TRUE)
median_game <- median(clean_data$memory_game_score, na.rm = TRUE)
sd_game <- sd(clean_data$memory_game_score, na.rm = TRUE)
iqr_game <- IQR(clean_data$memory_game_score, na.rm = TRUE)
# Create summary table with clean column header
summary_table <- data.frame(
Statistic = c("Mean", "Median", "SD", "IQR"),
"Memory Game Score" = c(mean_game, median_game, sd_game, iqr_game),  check.names = FALSE
)
# Display table
kable(summary_table, format = "latex", booktabs = TRUE)
#| label: tbl-summary-2
#| tbl-cap: "Summary of Drug Types"
#| echo: false
#| warning: false
#| message: false
drug_counts <- table(clean_data$drug)
# percentages
drug_percentages <- prop.table(drug_counts) * 100
#  summary dataframe
drug_summary <- data.frame(
Drug = names(drug_counts),
Count = as.numeric(drug_counts),
Percentage = round(as.numeric(drug_percentages), 2)
)
# Display table
kable(drug_summary, format = "latex", booktabs = TRUE)
#| label: tbl-summary-3
#| tbl-cap: "Summary of Dosage Levels"
#| echo: false
#| warning: false
#| message: false
dosage_counts <- table(clean_data$dosage_level)
# percentage for each dosage level
dosage_percentages <- prop.table(dosage_counts) * 100
# summary dataframe
dosage_summary <- data.frame(
Dosage = names(dosage_counts),
Count = as.numeric(dosage_counts),
Percentage = round(as.numeric(dosage_percentages), 2)
)
# Display table
kable(dosage_summary, booktabs = TRUE, row.names = FALSE)
#| label: fig-boxplot-game-scores
#| echo: false
#| warning: false
#| message: false
#| fig.width: 6
#| fig.height: 5
#| dpi: 300
#| out.width: 60%   # Adjust output width to 60% of the page width
#| out.height: 40%  # Adjust output height to 40% of the page height
#| fig-cap: "Boxplots: Memory Game Scores by Drug Type and Dosage Level"
#| layout-ncol: 2  # Ensures plots are side by side
p3 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, fill = dosage_level)) +
geom_boxplot() +
labs(x = "Drug Type", y = "Memory Game Score", fill = "Dosage Level") +
theme_minimal()
#| label: fig-interaction
#| echo: false
#| warning: false
#| message: false
#| fig.width: 6  # Increased width
#| fig.height: 5  # Reduced height
#| dpi: 300
#| fig-cap: "Interaction Plot: Drug Type vs. Dosage Level"
#| layout-ncol: 2  # Ensures plots are side by side
library(ggplot2)
library(patchwork)  # For arranging plots
p1 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, color = dosage_level, group = dosage_level)) +
stat_summary(fun = mean, geom = "point", size = 2) +
stat_summary(fun = mean, geom = "line", size = 1) +
labs(title = "Memory Game Scores",
x = "Drug Type",
y = "Mean Memory Game Score",
color = "Dosage Level") +
theme_minimal()
#| label: fig-combined
#| echo: false
#| warning: false
#| message: false
#| fig.width: 12
#| fig.height: 6
#| fig-cap: "Interaction and Boxplots for Drug and Dosage Effects"
# Combine the plots side by side
p1 + p3
#| echo: false
#| warning: false
#| message: false
anova_model <- lm(memory_game_score ~ drug * dosage_level, data = clean_data)
model_tidy <- tidy(anova_model) %>%
rename(
`Predictor Term` = term,
`Estimate` = estimate,
`Std. Error` = std.error,
`t-statistic` = statistic,
`p-value` = p.value
)
#| label: fig-normal-plot
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9  # Reduced width
#| fig.height: 8  # Reduced height
#| dpi: 300
#| out.width: 60%
#| out.height: 50%
#| fig.align: "center"
#| fig-cap: "Q-Q Plot of Residuals"
# Normality Check
ggqqplot(residuals(anova_model))
#| label: tbl-shapiro
#| tbl-cap: "Shapiro-Wilk Test for Normality"
#| echo: false
#| warning: false
#| message: false
# Shapiro-Wilk Normality Test
shapiro_test <- shapiro.test(residuals(anova_model))
shapiro_table <- data.frame(
Statistic = round(shapiro_test$statistic, 4),
`P-Value` = round(shapiro_test$p.value, 4),
Method = shapiro_test$method,
check.names = FALSE  # Prevents automatic renaming
)
kable(shapiro_table, format = "latex", booktabs = TRUE)
#| label: tbl-bartlett
#| tbl-cap: "Bartlett’s Test for Homogeneity of Variance"
#| echo: false
#| warning: false
#| message: false
# Scale-Location Plot
# Perform Bartlett’s test for homogeneity of variance
bartlett_test <- bartlett.test(memory_game_score ~ interaction(drug, dosage_level), data = clean_data)
bartlett_table <- data.frame(
Statistic = round(bartlett_test$statistic, 4),
DF = bartlett_test$parameter,
`P-Value` = round(bartlett_test$p.value, 4),
Method = bartlett_test$method,
check.names = FALSE
)
kable(bartlett_table, format = "latex", booktabs = TRUE)
#| label: fig-residual-plot
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| out.width: 60%
#| out.height: 50%
#| fig.align: "center"
#| fig-cap: "Residual plot: Check for Homoscedasticity"
plot(anova_model, which = 3, main = "", sub = "")
#| label: tbl-model-result
#| tbl-cap: "Coefficient Estimates from Linear Model for Memory Game Score"
#| echo: false
#| warning: false
#| message: false
# References: https://cran.r-project.org/web/packages/broom/vignettes/broom.html
library(broom)
anova_model <- lm(memory_game_score ~ drug * dosage_level, data = clean_data)
model_tidy <- tidy(anova_model) %>%
rename(
`Predictor Term` = term,
`Estimate` = estimate,
`Std. Error` = std.error,
`t-statistic` = statistic,
`p-value` = p.value
)
kable(model_tidy, format = "latex", booktabs = TRUE)
#| label: tbl-model-fit
#| tbl-cap: "Model Summary Statistics for Memory Game Score"
#| echo: false
#| warning: false
#| message: false
model_glance <- glance(anova_model) %>%
transmute(
`R - sqaured` = r.squared,
`F-Statistic` = statistic,
`Model df` = df,
`Residual df` = df.residual,
`p-value` = p.value,
`Residual Std. Error` = sigma,
`Sample Size (n)` = nobs
)
kable(model_glance, format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down")
#| label: tbl-anova-model
#| tbl-cap: "Two-Way ANOVA Results for Memory Game Score"
#| echo: false
#| warning: false
#| message: false
# Two way ANOVA result
anova_result <- anova(anova_model)
anova_table_df <- as.data.frame(anova_result)
kable(anova_table_df, format = "latex", booktabs = TRUE)
library(knitr)
library(kableExtra)
# Create a dataframe for the table
study_table <- data.frame(
Dosage = c("Low", "High"),
Aspirin = c("Aspirin 500 mg", "Aspirin 1000 mg"),
Paracetamol = c("Paracetamol 500 mg", "Paracetamol 1000 mg"),
Tramadol = c("Tramadol 50 mg", "Tramadol 100 mg"),
Placebo = c("Placebo 1 Tablet", "Placebo 2 Tablets")
)
# Render the table
kable(study_table, align = "c") %>%
add_header_above(c(" " = 1, "Drug Type" = 4)) %>%
kable_styling(full_width = FALSE, position = "center")
library(tidyverse)
library(janitor)
library(here)
library(lubridate)
library(patchwork)
library(arrow)
library(effectsize)
library(dplyr)
library(knitr)
library(performance)
library(modelsummary)
library(kableExtra)
library(performance)
library(WebPower)
library(ggpubr)
clean_data <- read.csv(here("data", "analysis_data", "clean_data.csv"))
age_counts <- table(clean_data$age_group)
# percentages for each age group
age_percentages <- prop.table(age_counts) * 100
# summary dataframe
age_summary <- data.frame(
`Age Group` = names(age_counts),
Count = as.numeric(age_counts),
Percentage = round(as.numeric(age_percentages), 2)
)
colnames(age_summary)[colnames(age_summary) == "Age.Group"] <- "Age Group"
# Display table
kable(age_summary, booktabs = TRUE, row.names = FALSE)
mean_game <- mean(clean_data$memory_game_score, na.rm = TRUE)
median_game <- median(clean_data$memory_game_score, na.rm = TRUE)
sd_game <- sd(clean_data$memory_game_score, na.rm = TRUE)
iqr_game <- IQR(clean_data$memory_game_score, na.rm = TRUE)
# Create summary table with clean column header
summary_table <- data.frame(
Statistic = c("Mean", "Median", "SD", "IQR"),
"Memory Game Score" = c(mean_game, median_game, sd_game, iqr_game),  check.names = FALSE
)
# Display table
kable(summary_table, format = "latex", booktabs = TRUE)
drug_counts <- table(clean_data$drug)
# percentages
drug_percentages <- prop.table(drug_counts) * 100
#  summary dataframe
drug_summary <- data.frame(
Drug = names(drug_counts),
Count = as.numeric(drug_counts),
Percentage = round(as.numeric(drug_percentages), 2)
)
# Display table
kable(drug_summary, format = "latex", booktabs = TRUE)
p3 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, fill = dosage_level)) +
geom_boxplot() +
labs(x = "Drug Type", y = "Memory Game Score", fill = "Dosage Level") +
theme_minimal()
p1 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, color = dosage_level, group = dosage_level)) +
stat_summary(fun = mean, geom = "point", size = 2) +
stat_summary(fun = mean, geom = "line", size = 1) +
labs(title = "Memory Game Scores",
x = "Drug Type",
y = "Mean Memory Game Score",
color = "Dosage Level") +
theme_minimal()
# Combine the plots side by side
p1 + p3
clean_data$dosage_level <- factor(clean_data$dosage_level, levels = c("Low", "High"))
# Boxplot of Memory Game Scores by Drug, colored by Dosage Level
ggplot(clean_data, aes(x = drug, y = memory_game_score, fill = dosage_level)) +
geom_boxplot() +
labs(
x = "Drug Type",
y = "Memory Game Score",
fill = "Dosage Level"
) +
theme_minimal() +
theme(
plot.title = element_text(size = 14, face = "bold"),
axis.title = element_text(size = 12)
)
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
ggplot(clean_data, aes(x = drug, y = memory_cards_score, fill = dosage_level)) +
geom_boxplot() +
labs(
x = "Drug Type",
y = "Memory Cards Score",
fill = "Dosage Level"
) +
theme_minimal()
# References: https://cran.r-project.org/web/packages/broom/vignettes/broom.html
library(broom)
# Regression Model results
anova_model <- lm(memory_game_score ~ drug * dosage_level, data = clean_data)
model_tidy <- tidy(anova_model)
kable(model_tidy, format = "latex", booktabs = TRUE)
model_glance <- glance(anova_model)
kable(model_glance, format = "latex", booktabs = TRUE) %>%
kable_styling(latex_options = "scale_down")
#| warning: false
#| message: false
# Two way ANOVA result
anova_result <- anova(anova_model)
anova_table_df <- as.data.frame(anova_result)
kable(anova_table_df, format = "latex", booktabs = TRUE)
#| fig.width: 4
#| fig.height: 3
#| out.width: 40%
#| out.height: 40%
#| dpi: 300
#| fig-cap: "Q-Q Plot of Residuals"
# Normality Check
ggqqplot(residuals(anova_model))
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Q-Q Plot of Residuals"
# Shapiro-Wilk Normality Test
shapiro_test <- shapiro.test(residuals(anova_model))
shapiro_table <- data.frame(
Statistic = round(shapiro_test$statistic, 4),
P_Value = round(shapiro_test$p.value, 4),
Method = shapiro_test$method
)
kable(shapiro_table, format = "latex", booktabs = TRUE)
plot(anova_model, which = 3)
# EFFECT SIZE AND POWER ANALYSIS
eta_sq <- eta_squared(anova_model, partial = TRUE)
eta2drug <- eta_sq$Eta2[1]
cohenfdrug <- sqrt(eta2drug / (1 - eta2drug))
eta2dos <- eta_sq$Eta2[2]
cohenfdos <- sqrt(eta2dos / (1 - eta2dos))
eta2drugdos <- eta_sq$Eta2[3]
cohenfdrugdos <- sqrt(eta2drugdos / (1 - eta2drugdos))
powerdrug <- wp.kanova(
n = 240,
ndf = 3,
f = cohenfdrug,
ng = 4,
alpha = 0.05
)
powerdos <- wp.kanova(
n = 240,
ndf = 1,
f = cohenfdos,
ng = 2,
alpha = 0.05
)
powerdrugdos <- wp.kanova(
n = 240,
ndf = 7, # because 8 - 1 = 7
f = cohenfdrugdos,
ng = 8,
alpha = 0.05
)
print(powerdrug)
print(powerdos)
print(powerdrugdos)
View(eta_sq)
# EFFECT SIZE AND POWER ANALYSIS
eta_sq <- eta_squared(anova_model, partial = TRUE)
eta2drug <- eta_sq$Eta2[1]
cohenfdrug <- sqrt(eta2drug / (1 - eta2drug))
print(cohenfdrug)
eta2dos <- eta_sq$Eta2[2]
cohenfdos <- sqrt(eta2dos / (1 - eta2dos))
print(cohenfdos)
eta2drugdos <- eta_sq$Eta2[3]
cohenfdrugdos <- sqrt(eta2drugdos / (1 - eta2drugdos))
print(cohenfdrugdos)
powerdrug <- wp.kanova(
n = 240,
ndf = 3,
f = cohenfdrug,
ng = 4,
alpha = 0.05
)
powerdos <- wp.kanova(
n = 240,
ndf = 1,
f = cohenfdos,
ng = 2,
alpha = 0.05
)
powerdrugdos <- wp.kanova(
n = 240,
ndf = 7, # because 8 - 1 = 7
f = cohenfdrugdos,
ng = 8,
alpha = 0.05
)
print(powerdrug)
print(powerdos)
print(powerdrugdos)
View(anova_table_df)
View(anova_result)
# EFFECT SIZE AND POWER ANALYSIS
eta_sq <- eta_squared(anova_model, partial = TRUE)
eta2drug <- eta_sq$Eta2[1]
cohenfdrug <- sqrt(eta2drug / (1 - eta2drug))
print(cohenfdrug)
eta2dos <- eta_sq$Eta2[2]
cohenfdos <- sqrt(eta2dos / (1 - eta2dos))
print(cohenfdos)
eta2drugdos <- eta_sq$Eta2[3]
cohenfdrugdos <- sqrt(eta2drugdos / (1 - eta2drugdos))
print(cohenfdrugdos)
powerdrug <- wp.kanova(
n = 240,
ndf = 3,
f = cohenfdrug,
ng = 8,
alpha = 0.05
)
powerdos <- wp.kanova(
n = 240,
ndf = 1,
f = cohenfdos,
ng = 8,
alpha = 0.05
)
powerdrugdos <- wp.kanova(
n = 240,
ndf = 3,
f = cohenfdrugdos,
ng = 8,
alpha = 0.05
)
print(powerdrug)
print(powerdos)
print(powerdrugdos)
