
---
title: "Effects of Different Pain Relievers and Dosages on Cognitive Retention"
subtitle: "Exploratory Data Analysis (EDA)"
author: 
  - Navya Hooda
  - Mohammed Yusuf Shaikh
  - Shivank Goel
  - Vanshika Vanshika
  - Jena Shah
date: today
date-format: long
number-sections: true
format: pdf
bibliography: references.bib
---

# Introduction

## Relevant Background
Pain can affect how well we perform everyday tasks in situations where focus and mental clarity
are crucial. Aspirin, Paracetamol, and Tramadol are pain relievers used commonly to reduce
physical discomfort, but we don’t know much about their impacts on cognitive functions. Tasks
requiring mental effort, such as recalling information, are harder to perform while in pain.
This study is interested in how different types of common pain relievers at standard dosages
(Aspirin, Paracetamol, and Tramadol) may affect outcomes of tasks involving memory tests. We
also analyze the effects of different dosages of each drug on memory function. The concept of
recalling information is used in various settings, so understanding how pain relief can impact
performance can be valuable to help with pain management without an impact on productivity.


## Research Questions
1. *How does the type of pain reliever (Aspirin 500 mg, Paracetamol 500 mg, Tramadol 50 mg, and Placebo) affect cognitive task performance?*
2. *How does the dosage (low vs. high) of each drug affect cognitive retention, while accounting for confounding factors like age?*

## Study Design  
This study involves *7 treatment groups*, with **30 participants** assigned to each. The groups are as follows:

1. Aspirin 500 mg
2. Aspirin 1000 mg
3. Paracetamol 500 mg
4. Paracetamol 1000 mg
5. Tramadol 50 mg
6. Tramadol 100 mg
7. Placebo

This results in **210 total observations** (7 × 30 = 210).


## Confounding Variable: Age  
To reduce variability, we consider **age** as a **confounding variable**. Participants will be categorized into three groups:

1. 18–34 years
2. 35–50 years
3. 50+ years

## Data Analysis Method   
We will use **one-way ANOVA** to analyze the effects of pain reliever type on memory performance.
and dosage levels on cognitive retention.


```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(here)
library(lubridate)
library(arrow)
library(dplyr)
library(knitr)
library(performance)
library(kableExtra)
library(performance)

clean_data <- read.csv(here("data", "analysis_data", "clean_data.csv"))


```



# Summary Statistics

## Summary of quantitative variables 

@tbl-summary-1 shows the summary statistics of memory game scores before and after the treatment. The mean is similar across all groups, however, the standard deviation (SD) is relatively high. The median game scores remain close to the mean, and the IQR (Interquartile Range) is smaller than the SD. The cards memory task shows little change before and after treatment, suggesting that pain relievers may not have a major effect on this specific task.



```{r}
#| label: tbl-summary-1
#| tbl-cap: "Summary Statistics for Quantitative Variables"
#| echo: false
#| warning: false
#| message: false

# References:
# https://tellingstorieswithdata.com/
# https://q.utoronto.ca/courses/376099/pages/project-descriptions?module_item_id=6379323


m1_game_before <- mean(clean_data$game_before, na.rm = TRUE)
m2_game_before <- median(clean_data$game_before, na.rm = TRUE)
m3_game_before <- sd(clean_data$game_before, na.rm = TRUE)
m4_game_before <- IQR(clean_data$game_before, na.rm = TRUE)

m1_game_after <- mean(clean_data$game_after, na.rm = TRUE)
m2_game_after <- median(clean_data$game_after, na.rm = TRUE)
m3_game_after <- sd(clean_data$game_after, na.rm = TRUE)
m4_game_after <- IQR(clean_data$game_after, na.rm = TRUE)

m1_cards_before <- mean(clean_data$cards_before, na.rm = TRUE)
m2_cards_before <- median(clean_data$cards_before, na.rm = TRUE)
m3_cards_before <- sd(clean_data$cards_before, na.rm = TRUE)
m4_cards_before <- IQR(clean_data$cards_before, na.rm = TRUE)

m1_cards_after <- mean(clean_data$cards_after, na.rm = TRUE)
m2_cards_after <- median(clean_data$cards_after, na.rm = TRUE)
m3_cards_after <- sd(clean_data$cards_after, na.rm = TRUE)
m4_cards_after <- IQR(clean_data$cards_after, na.rm = TRUE)

# Combine into a table
summary_table <- data.frame(
  Statistic = c("Mean", "Median", "SD", "IQR"),
  Game_Before = c(m1_game_before, m2_game_before, m3_game_before, m4_game_before),
  Game_After = c(m1_game_after, m2_game_after, m3_game_after, m4_game_after),
  Cards_Before = c(m1_cards_before, m2_cards_before, m3_cards_before, m4_cards_before),
  Cards_After = c(m1_cards_after, m2_cards_after, m3_cards_after, m4_cards_after)
)

kable(summary_table, format = "latex", booktabs = TRUE) 
```

## Summary of counts and percentage for qualitative variables

@tbl-summary-2 shows the distribution of participants across drug types. Aspirin, Paracetamol, and Tramadol each have 60 participants (28.57\%), ensuring balance. However, the Placebo group is smaller (30 participants, 14.29\%).

@tbl-summary-3 shows the dosage levels assigned to participants. There is an equal split between high-dose (90 participants, 50\%) and low-dose (90 participants, 50\%) conditions. 

@tbl-summary-4 provides an overview of participant locations. The distribution is relatively even across six different locations, with each site having either 30 (14.29\%) or 60 (28.57\%) participants.

## Confounding Variable

@tbl-summary-5 shows the breakdown of age groups, which is a confounding variable in this study. The three age groups: 18–34, 35–50, and 50+ each have 70 participants (33.33\%).










```{r}
#| label: tbl-summary-2
#| tbl-cap: "Summary of Drug Types"
#| echo: false
#| warning: false
#| message: false


# Count and percentage for Drug
drug_counts <- table(clean_data$drug)
drug_percentages <- prop.table(drug_counts) * 100
drug_summary <- data.frame(Drug = names(drug_counts), Count = as.numeric(drug_counts), Percentage = round(as.numeric(drug_percentages), 2))
colnames(drug_summary) <- c("Drug", "Count", "Percentage")
kable(drug_summary, format = "latex", booktabs = TRUE) 

```

```{r}
#| label: tbl-summary-3
#| tbl-cap: "Summary of Dosage Levels"
#| echo: false
#| warning: false
#| message: false


# Count and percentage for Dosage Level
dosage_counts <- table(clean_data$dosage_level)
dosage_percentages <- prop.table(dosage_counts) * 100
dosage_summary <- data.frame(Dosage = names(dosage_counts), Count = as.numeric(dosage_counts), Percentage = round(as.numeric(dosage_percentages), 2))

kable(dosage_summary, format = "latex", booktabs = TRUE)

```

```{r}
#| label: tbl-summary-4
#| tbl-cap: "Summary of Locations"
#| echo: false
#| warning: false
#| message: false

# Count and percentage for Location
location_counts <- table(clean_data$location)
location_percentages <- prop.table(location_counts) * 100
location_summary <- data.frame(Location = names(location_counts), Count = as.numeric(location_counts), Percentage = round(as.numeric(location_percentages), 2))

kable(location_summary, format = "latex", booktabs = TRUE)

```

```{r}
#| label: tbl-summary-5
#| tbl-cap: "Summary of Age Groups"
#| echo: false
#| warning: false
#| message: false


# Count and percentage for Age Group
age_counts <- table(clean_data$age_group)
age_percentages <- prop.table(age_counts) * 100
age_summary <- data.frame(Age_Group = names(age_counts), Count = as.numeric(age_counts), Percentage = round(as.numeric(age_percentages), 2))


kable(age_summary, format = "latex", booktabs = TRUE) 
```




```{r}
#| echo: false
#| warning: false
#| message: false

clean_data$improvement <- clean_data$game_after - clean_data$game_before

improvement_summary <- clean_data %>%
  group_by(drug) %>%
  summarise(
    Mean_Improvement = mean(improvement, na.rm = TRUE),
    SD_Improvement = sd(improvement, na.rm = TRUE),
    Median_Improvement = median(improvement, na.rm = TRUE)
  )

kable(improvement_summary, format = "latex", booktabs = TRUE, caption = "Mean Improvement in Game Scores by Drug")

```


# Plots

## Game Score Distribution Before and After Treatment

@fig-boxplot-scores shows the distribution of memory game scores before and after treatment across different drug types using box plots.

1. The median scores for all drugs appear similar before treatment.
2. **Tramadol has a higher median** than other drugs both before and after treatment.
3. The **Placebo group has a slightly lower median score** compared to other drugs.
4. There is **one outlier in the Tramadol group before treatment**.
5. The (IQR) is **similar across all drug types**.

These boxplots provide an initial comparison of cognitive performance changes before and after drug administration.


```{r}
#| label: fig-boxplot-scores
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Boxplot of Memory Game Scores Before and After Treatment by Drug Type"

library(ggplot2)
library(patchwork)  

#References
#https://r-graph-gallery.com/package/patchwork.html

clean_data$drug <- factor(clean_data$drug, labels = c("Aspirin", "Paracetamol", "Placebo", "Tramadol"))

# Create first boxplot
p1 <- ggplot(clean_data, aes(x = drug, y = game_before, fill = drug)) + 
  geom_boxplot() +
  labs(title = "Memory Game Scores Before Treatment", x = "Drug Type", y = "Game Score", fill = "Drug") +
  theme_minimal()

# Create second boxplot
p2 <- ggplot(clean_data, aes(x = drug, y = game_after, fill = drug)) + 
  geom_boxplot() +
  labs(title = "Memory Game Scores After Treatment", x = "Drug Type", y = "Game Score", fill = "Drug") +
  theme_minimal()

p1 / p2 + plot_annotation()

```

## Memory Card Score Distribution Before and After Treatment

@fig-boxplot-cards shows the distribution of **memory card scores before and after treatment** across drug types.

1. Before treatment, the scores are relatively high across all groups, with Paracetamol and Placebo showing slightly higher medians than the others.
2. After treatment, the distributions remain similar, though there is a slight increase in spread  for Aspirin and Paracetamol.
3. Outliers are present in all groups, indicating some variability in memory card performance across individuals.




```{r}
#| label: fig-boxplot-cards
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Boxplot of Memory Card Scores Before and After by Drug"

library(ggplot2)
library(patchwork)

clean_data$drug <- factor(clean_data$drug, labels = c("Aspirin", "Paracetamol", "Placebo", "Tramadol"))

p1 <- ggplot(clean_data, aes(x = drug, y = cards_before, fill = drug)) + 
  geom_boxplot() +
  labs(title = "Memory Card Scores Before Treatment", x = "Drug Type", y = "Memory Card Score", fill = "Drug") +
  theme_minimal()

p2 <- ggplot(clean_data, aes(x = drug, y = cards_after, fill = drug)) + 
  geom_boxplot() +
  labs(title = "Memory Card Scores After Treatment", x = "Drug Type", y = "Memory Card Score", fill = "Drug") +
  theme_minimal()

p1 / p2 + plot_annotation()

```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 7
#| fig.height: 4
#| dpi: 300
#| fig-cap: "Distribution of Dosage Levels"

ggplot(clean_data, aes(x = dosage_level, fill = dosage_level)) +
  geom_bar() +
  labs(title = "Distribution of Dosage Levels", x = "Dosage Level", y = "Count") +
  theme_minimal()

```


# Assumptions






```{r}
#| include: false
#| warning: false
#| message: false
# Barlett Test Homegenity of Variance: testing for ass
# bartlett_test <- bartlett.test(game_after ~ drug, data = clean_data)
# print(bartlett_test)
```



```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Assumption Check for Time taken before taking the Drug"

# Fit ANOVA Model
model_b <- aov(game_before ~ drug, data = clean_data)

# Check Model Assumptions
check_model(model_b, check = c("normality", "homogeneity"))
```

```{r}
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Assumption Check for Time taken after taking the Drug"

# Fit ANOVA Model
model <- aov(game_after ~ drug, data = clean_data)

# Check Model Assumptions
check_model(model, check = c("normality", "homogeneity"))
```


# References

