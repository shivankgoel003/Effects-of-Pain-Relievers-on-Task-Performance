---
title: "Effects of Different Pain Relievers and Dosages on Cognitive Retention"
subtitle: "Exploratory Data Analysis (EDA)"
author: 
  - Navya Hooda
  - Mohammed Yusuf Shaikh
  - Shivank Goel
  - Vanshika Vanshika
  - Jena Shah
date: today
date-format: long
abstract: Painkillers are commonly used to manage pain, but their effects extend beyond physical relief. While they provide immediate physical comfort, their impact on cognitive performance is often overlooked. This study explores how different painkillers and dosages influence cognitive function. Using simulated testing, participants were randomly assigned a treatment (drug type and dosage) while controlling for variables such as age. Our findings indicate no significant relationship between drug type, dosage, and overall cognitive performance post-treatment. However, we observed some correlation between certain drug-dosage combinations and memory improvement, suggesting a potential area for further research. While the results were not statistically significant, this study contributes to a deeper understanding of the cognitive effects of painkillers and highlights the need for further investigation into their potential impact on memory and cognition.
number-sections: true
format: pdf
bibliography: references.bib
toc: true
---


# Acknowledgements 

We extend our gratitude to the academic community for their contributions to this research.No auto-complete tools such as co-pilot were used in the course of this project, however, Language Learning Model ChatGPT was used while writing this paper. It was used for the purpose of code debugging, understanding models, and knowledge of certain topics, which we were not aware of. The chat with the AI bot is also attached as a reference under @sec-appendix



# Introduction




## Relevant Background
Pain can make everyday tasks harder, particularly when mental focus and clarity are required. Common pain relievers like Aspirin, Paracetamol, and Tramadol are often used to reduce physical discomfort, but their impact on cognitive functions is not well understood. Recalling information, a task that demands mental effort, becomes more difficult when we're in pain. This study investigates how different pain relievers (Aspirin, Paracetamol, and Tramadol) at standard dosages affect memory performance. It also looks at how varying dosages of each drug influence memory function. Since the ability to recall information is essential in many situations, understanding how pain relief might impact cognitive performance is important for managing pain without affecting productivity.

## Research Questions
1. *How does the type of pain reliever (Aspirin 500 mg, Paracetamol 500 mg, Tramadol 50 mg, and Placebo) affect cognitive task performance?*
2. *How does the dosage (low vs. high) of each drug affect cognitive retention, while accounting for confounding factors like age?*

## Study Design  
This study involves 2 factors, pain reliever type (4 levels) and dosage(2 levels). Crossing them provides us with *8 treatment groups*, with **30 participants** assigned to each. The groups are as follows:

1. Aspirin 500 mg (Low)
2. Aspirin 1000 mg (High)
3. Paracetamol 500 mg (Low)
4. Paracetamol 1000 mg (High)
5. Tramadol 50 mg (Low)
6. Tramadol 100 mg (High)
7. Placebo (Low) 
8. Placebo (High)

This results in **240 total observations** (8 × 30 = 240).


## Confounding Variable: Age  
To reduce bias, we consider to control the experiment by controlling participant ages to be 18+. Hence in this study **age** acts as a **confounding variable**.
Participants will be categorized into three groups evenly to prevent bias created through age. 
The groups are as follows:

1. 18–34 years
2. 35–50 years
3. 50+ years

## Quantitative and Qualitative Variables 
In our study the quantitative and qualitative variables are as follows: 

1. Quantitative variables: Memory Game Scores, Memory Test Cards Scores 
2. Qualitative variables: Type of pain reliever, dosage level (low/high)

## Data Analysis Method   
We will use **one-way ANOVA** to analyze the effects of different pain relievers on memory performance.
Similarly, we will use **two-way ANOVA** to analyze the effects of different dosage levels per drug type on memory performance and cognitive retention. 



```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(janitor)
library(here)
library(lubridate)
library(patchwork)
library(arrow)
library(dplyr)
library(knitr)
library(performance)
library(modelsummary)
library(kableExtra)
library(performance)
library(ggpubr)

clean_data <- read.csv(here("data", "analysis_data", "clean_data.csv"))


```


# Summary Statistics

## Summary of quantitative variables 

@tbl-summary-1 shows the summary statistics of memory game scores before and after the treatment. The mean is similar across all groups, however, the standard deviation (SD) is relatively high. The median game scores remain close to the mean, and the IQR (Interquartile Range) is smaller than the SD. The cards memory task shows little change before and after treatment, suggesting that pain relievers may not have a major effect on this specific task.

Evident through the results on @tbl-summary-6, Paracetamol is the drug that has the greatest mean & median improvement in the game scores after administering the drug (without dosage taken into account). Aspirin appears to negatively impact the results of the game after being given to people, this was seen through the mean and median improvements.


```{r}
#| label: tbl-summary-1
#| tbl-cap: "Summary Statistics for Quantitative Variables"
#| echo: false
#| warning: false
#| message: false

# Compute statistics for Memory Game Score
mean_game <- mean(clean_data$memory_game_score, na.rm = TRUE)
median_game <- median(clean_data$memory_game_score, na.rm = TRUE)
sd_game <- sd(clean_data$memory_game_score, na.rm = TRUE)
iqr_game <- IQR(clean_data$memory_game_score, na.rm = TRUE)

# Compute statistics for Memory Cards Score
mean_cards <- mean(clean_data$memory_cards_score, na.rm = TRUE)
median_cards <- median(clean_data$memory_cards_score, na.rm = TRUE)
sd_cards <- sd(clean_data$memory_cards_score, na.rm = TRUE)
iqr_cards <- IQR(clean_data$memory_cards_score, na.rm = TRUE)

# Combine into a summary table
summary_table <- data.frame(
  Statistic = c("Mean", "Median", "SD", "IQR"),
  `Memory Game Score` = c(mean_game, median_game, sd_game, iqr_game),
  `Memory Cards Score` = c(mean_cards, median_cards, sd_cards, iqr_cards)
)

colnames(summary_table) <- c("Statistic", "Memory Game Score", "Memory Cards Score")

# Display table

kable(summary_table, format = "latex", booktabs = TRUE)

```




```{r}
#| label: tbl-summary-2
#| tbl-cap: "Summary of Drug Types"
#| echo: false
#| warning: false
#| message: false

drug_counts <- table(clean_data$drug)

# percentages
drug_percentages <- prop.table(drug_counts) * 100

#  summary dataframe
drug_summary <- data.frame(
  Drug = names(drug_counts),
  Count = as.numeric(drug_counts),
  Percentage = round(as.numeric(drug_percentages), 2)
)

# Display table
kable(drug_summary, format = "latex", booktabs = TRUE)


```

```{r}
#| label: tbl-summary-3
#| tbl-cap: "Summary of Dosage Levels"
#| echo: false
#| warning: false
#| message: false


dosage_counts <- table(clean_data$dosage_level)

# percentage for each dosage level
dosage_percentages <- prop.table(dosage_counts) * 100

# summary dataframe
dosage_summary <- data.frame(
  Dosage = names(dosage_counts),
  Count = as.numeric(dosage_counts),
  Percentage = round(as.numeric(dosage_percentages), 2)
)


# Display table
kable(dosage_summary, booktabs = TRUE, row.names = FALSE)

```


```{r}
#| label: tbl-summary-5
#| tbl-cap: "Summary of Age Groups"
#| echo: false
#| warning: false
#| message: false

 
age_counts <- table(clean_data$age_group)

# percentages for each age group
age_percentages <- prop.table(age_counts) * 100

# summary dataframe
age_summary <- data.frame(
  Age_Group = names(age_counts),
  Count = as.numeric(age_counts),
  Percentage = round(as.numeric(age_percentages), 2)
)

# Display table
kable(age_summary, booktabs = TRUE, row.names = FALSE)

```

## Summary of counts and percentage for qualitative variables

@tbl-summary-2 shows the distribution of participants across drug types. Aspirin, Paracetamol, and Tramadol, and Placebo each have 60 participants (25\%), ensuring balance.

@tbl-summary-3 shows the dosage levels assigned to participants. There is an equal split between high-dose (120 participants, 50\%) and low-dose (120 participants, 50\%) conditions. 

## Confounding Variable

@tbl-summary-5 shows the breakdown of age groups, which is a confounding variable in this study. The three age groups: 18–34, 35–50, and 50+ each have 80 participants (33.33\%).



```{r}
#| label: fig-interaction
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Interaction Plot: Drug Type vs. Dosage Level"

p1 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, color = dosage_level, group = dosage_level)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line", size = 1) +
  labs(title = "Memory Game Scores",
       x = "Drug Type",
       y = "Mean Memory Game Score",
       color = "Dosage Level") +
  theme_minimal()

# Interaction plot for Memory Cards Scores
p2 <- ggplot(clean_data, aes(x = drug, y = memory_cards_score, color = dosage_level, group = dosage_level)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line", size = 1) +
  labs(title = "Memory Cards Scores",
       x = "Drug Type",
       y = "Mean Memory Cards Score",
       color = "Dosage Level") +
  theme_minimal()

# Combine the two plots vertically
combined_plot <- p1 / p2
combined_plot
```

# Plots

```{r}
#| label: fig-boxplot-game-scores
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Memory Game Scores by Drug Type and Dosage Level"

clean_data$dosage_level <- factor(clean_data$dosage_level, levels = c("Low", "High"))

# Boxplot of Memory Game Scores by Drug, colored by Dosage Level
ggplot(clean_data, aes(x = drug, y = memory_game_score, fill = dosage_level)) +
  geom_boxplot() +
  labs(
    x = "Drug Type",
    y = "Memory Game Score",
    fill = "Dosage Level"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 12)
  )

```

```{r}
#| label: fig-boxplot-card-scores
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Memory Game Scores by Drug Type and Dosage Level"

ggplot(clean_data, aes(x = drug, y = memory_cards_score, fill = dosage_level)) +
  geom_boxplot() +
  labs(
    x = "Drug Type",
    y = "Memory Cards Score",
    fill = "Dosage Level"
  ) +
  theme_minimal()

```


## Game Score Distribution Before and After Treatment

@fig-boxplot-scores shows the distribution of memory game scores before and after treatment across different drug types using box plots.

1. The median scores for all drugs appear similar before treatment.
2. Tramadol has a higher median than other drugs both before and after treatment.
3. The Placebo group has a slightly lower median score compared to other drugs.
4. There is one outlier in the Tramadol group before treatment.
5. The (IQR) is **similar across all drug types**, though Tramadol sees a decrease in its IQR in the memory game scores after treatment. 

These boxplots provide an initial comparison of cognitive performance changes before and after drug administration.



## Memory Card Score Distribution Before and After Treatment

@fig-boxplot-cards shows the distribution of **memory card scores before and after treatment** across drug types.

1. Before treatment, the scores are relatively high across all groups, with Paracetamol and Placebo showing slightly higher medians than the others.
2. After treatment, the distributions remain similar, though there is a slight increase in spread for Aspirin, Paracetamol, and Placebo.
3. There is a slight decrease in the IQR of Tramadol. 
3. Outliers are present in all groups, indicating some variability in memory card performance across individuals.



# Assumptions

## Model

$$
\text{memory\_game\_score}_i = \beta_0 + \beta_1 \cdot \text{drug}_i + \beta_2 \cdot \text{dosage\_level}_i + \beta_3 \cdot (\text{drug}_i \times \text{dosage\_level}_i) + \varepsilon_i
$$

Where:

- $\beta_0$ is the intercept.

- $\beta_1$, $\beta_2$, and $\beta_3$ are coefficients for the predictors and interaction term.

- $\varepsilon_i$ is the random error term.


```{r}
#| label: tbl-model-result
#| tbl-cap: "Regression Results for Memory Game Score"
#| echo: false
#| warning: false
#| message: false

# References: https://cran.r-project.org/web/packages/broom/vignettes/broom.html

library(broom)

# Regression Model results
anova_model <- lm(memory_game_score ~ drug * dosage_level, data = clean_data)

model_tidy <- tidy(anova_model)

kable(model_tidy, format = "latex", booktabs = TRUE)

```

```{r}
#| label: tbl-model-fit
#| tbl-cap: "Model Fit Statistics for Memory Game Score"
#| echo: false
#| warning: false
#| message: false

model_glance <- glance(anova_model)
kable(model_glance, format = "latex", booktabs = TRUE) %>%
   kable_styling(latex_options = "scale_down")
```


$$
Y_{ijk} = \mu + \alpha_i + \beta_j + (\alpha\beta)_{ij} + \varepsilon_{ijk}
$$

Where:

- $Y_{ijk}$: Memory score
- $\mu$: Overall mean  
- $\alpha_i$: Effect of the $i^{\text{th}}$ drug  
- $\beta_j$: Effect of the $j^{\text{th}}$ dosage level  
- $(\alpha\beta)_{ij}$: Interaction effect between drug and dosage  
- $\varepsilon_{ijk} \sim \mathcal{N}(0, \sigma^2)$: Random error  


```{r}
#| label: tbl-anova-model
#| tbl-cap: "Two-Way ANOVA Results for Memory Game Score"
#| echo: false
#| warning: false
#| message: false


# Two way ANOVA result
anova_result <- anova(anova_model)

anova_table_df <- as.data.frame(anova_result)

kable(anova_table_df, format = "latex", booktabs = TRUE)

```

```{r}
#| label: fig-normal-plot
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Q-Q Plot of Residuals"

# Normality Check
ggqqplot(residuals(anova_model))
```

```{r}
#| label: tbl-shapiro
#| tbl-cap: "Shapiro-Wilk Test for Normality"
#| echo: false
#| warning: false
#| message: false

# Shapiro-Wilk Normality Test
shapiro_test <- shapiro.test(residuals(anova_model))
shapiro_table <- data.frame(
  Statistic = round(shapiro_test$statistic, 4),
  P_Value = round(shapiro_test$p.value, 4),
  Method = shapiro_test$method
)

kable(shapiro_table, format = "latex", booktabs = TRUE)
```

```{r}
#| label: fig-variance-plot
#| echo: false
#| warning: false
#| message: false
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Q-Q Plot of Residuals"

plot(anova_model, which = 3)
```

```{r}
#| label: tbl-bartlett
#| tbl-cap: "Bartlett’s Test for Homogeneity of Variance"
#| echo: false
#| warning: false
#| message: false

# Scale-Location Plot


# Perform Bartlett’s test for homogeneity of variance
bartlett_test <- bartlett.test(memory_game_score ~ interaction(drug, dosage_level), data = clean_data)

bartlett_table <- data.frame(
  Statistic = round(bartlett_test$statistic, 4),
  DF = bartlett_test$parameter,
  P_Value = round(bartlett_test$p.value, 4),
  Method = bartlett_test$method
)

kable(bartlett_table, format = "latex", booktabs = TRUE)
```




# Appendix {#sec-appendix}

```{r}

library(tidyverse)
library(janitor)
library(here)
library(lubridate)
library(patchwork)
library(arrow)
library(dplyr)
library(knitr)
library(performance)
library(modelsummary)
library(kableExtra)
library(performance)
library(ggpubr)

clean_data <- read.csv(here("data", "analysis_data", "clean_data.csv"))
```


```{r}

# Compute statistics for Memory Game Score
mean_game <- mean(clean_data$memory_game_score, na.rm = TRUE)
median_game <- median(clean_data$memory_game_score, na.rm = TRUE)
sd_game <- sd(clean_data$memory_game_score, na.rm = TRUE)
iqr_game <- IQR(clean_data$memory_game_score, na.rm = TRUE)

# Compute statistics for Memory Cards Score
mean_cards <- mean(clean_data$memory_cards_score, na.rm = TRUE)
median_cards <- median(clean_data$memory_cards_score, na.rm = TRUE)
sd_cards <- sd(clean_data$memory_cards_score, na.rm = TRUE)
iqr_cards <- IQR(clean_data$memory_cards_score, na.rm = TRUE)

# Combine into a summary table
summary_table <- data.frame(
  Statistic = c("Mean", "Median", "SD", "IQR"),
  `Memory Game Score` = c(mean_game, median_game, sd_game, iqr_game),
  `Memory Cards Score` = c(mean_cards, median_cards, sd_cards, iqr_cards)
)

colnames(summary_table) <- c("Statistic", "Memory Game Score", "Memory Cards Score")

# Display table

kable(summary_table, format = "latex", booktabs = TRUE)
```

```{r}

drug_counts <- table(clean_data$drug)

# percentages
drug_percentages <- prop.table(drug_counts) * 100

#  summary dataframe
drug_summary <- data.frame(
  Drug = names(drug_counts),
  Count = as.numeric(drug_counts),
  Percentage = round(as.numeric(drug_percentages), 2)
)

# Display table
kable(drug_summary, format = "latex", booktabs = TRUE)

```

```{r}

dosage_counts <- table(clean_data$dosage_level)

# percentage for each dosage level
dosage_percentages <- prop.table(dosage_counts) * 100

# summary dataframe
dosage_summary <- data.frame(
  Dosage = names(dosage_counts),
  Count = as.numeric(dosage_counts),
  Percentage = round(as.numeric(dosage_percentages), 2)
)


# Display table
kable(dosage_summary, booktabs = TRUE, row.names = FALSE)

```

```{r}
age_counts <- table(clean_data$age_group)

# percentages for each age group
age_percentages <- prop.table(age_counts) * 100

# summary dataframe
age_summary <- data.frame(
  Age_Group = names(age_counts),
  Count = as.numeric(age_counts),
  Percentage = round(as.numeric(age_percentages), 2)
)

# Display table
kable(age_summary, booktabs = TRUE, row.names = FALSE)

```

```{r}

p1 <- ggplot(clean_data, aes(x = drug, y = memory_game_score, color = dosage_level, group = dosage_level)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line", size = 1) +
  labs(title = "Memory Game Scores",
       x = "Drug Type",
       y = "Mean Memory Game Score",
       color = "Dosage Level") +
  theme_minimal()

# Interaction plot for Memory Cards Scores
p2 <- ggplot(clean_data, aes(x = drug, y = memory_cards_score, color = dosage_level, group = dosage_level)) +
  stat_summary(fun = mean, geom = "point", size = 3) +
  stat_summary(fun = mean, geom = "line", size = 1) +
  labs(title = "Memory Cards Scores",
       x = "Drug Type",
       y = "Mean Memory Cards Score",
       color = "Dosage Level") +
  theme_minimal()

# Combine the two plots vertically
combined_plot <- p1 / p2
combined_plot
```

```{r}

clean_data$dosage_level <- factor(clean_data$dosage_level, levels = c("Low", "High"))

# Boxplot of Memory Game Scores by Drug, colored by Dosage Level
ggplot(clean_data, aes(x = drug, y = memory_game_score, fill = dosage_level)) +
  geom_boxplot() +
  labs(
    x = "Drug Type",
    y = "Memory Game Score",
    fill = "Dosage Level"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(size = 14, face = "bold"),
    axis.title = element_text(size = 12)
  )

```

```{r}
#| fig.width: 9
#| fig.height: 8
#| dpi: 300

ggplot(clean_data, aes(x = drug, y = memory_cards_score, fill = dosage_level)) +
  geom_boxplot() +
  labs(
    x = "Drug Type",
    y = "Memory Cards Score",
    fill = "Dosage Level"
  ) +
  theme_minimal()
```

```{r}

# References: https://cran.r-project.org/web/packages/broom/vignettes/broom.html

library(broom)

# Regression Model results
anova_model <- lm(memory_game_score ~ drug * dosage_level, data = clean_data)

model_tidy <- tidy(anova_model)

kable(model_tidy, format = "latex", booktabs = TRUE)

```

```{r}

model_glance <- glance(anova_model)
kable(model_glance, format = "latex", booktabs = TRUE) %>%
   kable_styling(latex_options = "scale_down")
```

```{r}
#| warning: false
#| message: false


# Two way ANOVA result
anova_result <- anova(anova_model)

anova_table_df <- as.data.frame(anova_result)

kable(anova_table_df, format = "latex", booktabs = TRUE)
```

```{r}
#| fig.width: 9
#| fig.height: 8
#| dpi: 300
#| fig-cap: "Q-Q Plot of Residuals"

# Normality Check
ggqqplot(residuals(anova_model))
```

```{r}


# Shapiro-Wilk Normality Test
shapiro_test <- shapiro.test(residuals(anova_model))
shapiro_table <- data.frame(
  Statistic = round(shapiro_test$statistic, 4),
  P_Value = round(shapiro_test$p.value, 4),
  Method = shapiro_test$method
)

kable(shapiro_table, format = "latex", booktabs = TRUE)
```

```{r}

plot(anova_model, which = 3)
```
